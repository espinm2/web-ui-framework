{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"vis",
				"visible"
			],
			[
				"num",
				"num_sides"
			],
			[
				"u",
				"unsigned"
			],
			[
				"rel",
				"relativeAngles"
			],
			[
				"calc",
				"calculateCost"
			],
			[
				"vec",
				"vector"
			],
			[
				"type",
				"typedef"
			],
			[
				"score",
				"scoreVector"
			],
			[
				"exp",
				"expected_gap"
			],
			[
				"side",
				"sides_shape"
			],
			[
				"shape",
				"sides_shape"
			],
			[
				"crun",
				"crunchGaps"
			],
			[
				"Par",
				"ParticleSystem"
			],
			[
				"sorted",
				"sorted_angles"
			],
			[
				"sort",
				"sorted_angles"
			],
			[
				"v",
				"vec3"
			],
			[
				"cen",
				"center"
			],
			[
				"RA",
				"RADIUS_INIT_SPHERE"
			],
			[
				"cur",
				"cursor"
			],
			[
				"sphere",
				"sphere_verts"
			],
			[
				"glD",
				"glDeleteBuffers"
			],
			[
				"sphe",
				"sphere_vert"
			],
			[
				"sphere_v",
				"sphere_verts_VBO"
			],
			[
				"normal",
				"normalize"
			],
			[
				"sph",
				"sphere_vert"
			],
			[
				"getO",
				"getOldPos"
			],
			[
				"norm",
				"normalize"
			],
			[
				"more",
				"more_180"
			],
			[
				"less",
				"less_180"
			],
			[
				"gath",
				"gathered"
			],
			[
				"cent",
				"centerPos"
			],
			[
				"print",
				"printf	printf â€¦"
			],
			[
				"best",
				"best_shape_fit"
			],
			[
				"cur_",
				"cur_max"
			],
			[
				"max",
				"maximal_score_mask"
			],
			[
				"ne",
				"next_score"
			],
			[
				"sc",
				"scores"
			],
			[
				"is",
				"isCar"
			],
			[
				"isC",
				"isCarList"
			],
			[
				"cla",
				"classification"
			],
			[
				"gap",
				"gap_threshold"
			],
			[
				"particle",
				"particle_size"
			],
			[
				"parti",
				"particles"
			],
			[
				"particl",
				"particle_size"
			],
			[
				"pari",
				"particle_before_gap"
			],
			[
				"be",
				"beyond_level"
			],
			[
				"dis",
				"distances"
			],
			[
				"poin",
				"point_num"
			],
			[
				"shap",
				"shapeBin"
			],
			[
				"inc",
				"include"
			],
			[
				"Sc",
				"SCORES"
			],
			[
				"con",
				"conf_mat"
			],
			[
				"conf",
				"conf_mat"
			],
			[
				"ca",
				"catagory"
			],
			[
				"oc",
				"ocean"
			],
			[
				"ro",
				"road"
			],
			[
				"class",
				"classification"
			],
			[
				"im",
				"imagepath"
			],
			[
				"clas",
				"classification"
			],
			[
				"fea",
				"feature_num"
			],
			[
				"M",
				"Massive_Y"
			],
			[
				"red",
				"redcarpet"
			],
			[
				"wh",
				"wheatfield"
			],
			[
				"feat",
				"feature_vectors"
			],
			[
				"ou",
				"out_filename"
			],
			[
				"pah",
				"path_read"
			],
			[
				"nu",
				"num_im"
			],
			[
				"creat",
				"createTrainSaveClassifers"
			],
			[
				"load",
				"loadTrainedClassifers"
			],
			[
				"whe",
				"wheatfield_score"
			],
			[
				"grass",
				"grass_score"
			],
			[
				"ocea",
				"ocean_score"
			],
			[
				"train",
				"trainClassifiers"
			],
			[
				"road",
				"road_classifer"
			],
			[
				"roa",
				"road_classifer"
			],
			[
				"FEATR",
				"feature_num"
			],
			[
				"pat",
				"path_write"
			],
			[
				"extrac",
				"extract_and_save"
			],
			[
				"extra",
				"extract_feature1"
			],
			[
				"del",
				"delta_w"
			],
			[
				"de",
				"delta_w"
			],
			[
				"resi",
				"resized_image"
			],
			[
				"ex",
				"extract_color_histagram"
			],
			[
				"bin",
				"bin_g_index"
			],
			[
				"extr",
				"extract_feature1"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"res",
				"resize_img"
			],
			[
				"an",
				"annaeling"
			],
			[
				"Part",
				"PartPtrVec"
			],
			[
				"Atr",
				"Attractor"
			],
			[
				"ve",
				"vec3"
			],
			[
				"angle",
				"angleBetweenVectors"
			],
			[
				"sq",
				"square_dist"
			],
			[
				"ANG",
				"GATHER_ANGLE"
			],
			[
				"angl",
				"angleBetweenVectors"
			],
			[
				"ang",
				"angl_okay"
			],
			[
				"ga",
				"gathered"
			],
			[
				"glm",
				"glm::vec3"
			],
			[
				"newP",
				"newParticles"
			],
			[
				"debug",
				"debug_index"
			],
			[
				"par",
				"particles"
			],
			[
				"new",
				"new_positions"
			],
			[
				"debu",
				"debugcount"
			],
			[
				"gutt",
				"gutted_mask"
			],
			[
				"gut",
				"gutted_mask_created"
			],
			[
				"mergeS",
				"mergeSimilarParticles"
			],
			[
				"FIXED",
				"fixedVec"
			],
			[
				"Pari",
				"Particle"
			],
			[
				"getMAsk",
				"getMaskParticle"
			],
			[
				"before",
				"before_annealing"
			],
			[
				"PArt",
				"PartPtrVec"
			],
			[
				"local",
				"localAnnealing"
			],
			[
				"Particle",
				"ParticleSystem"
			],
			[
				"pre",
				"prevForce"
			],
			[
				"iteration",
				"iterations"
			],
			[
				"cr",
				"created"
			],
			[
				"getMa",
				"getMaskParticles"
			],
			[
				"fixe",
				"fixed_position"
			],
			[
				"create",
				"created_particles"
			],
			[
				"push",
				"push_back"
			],
			[
				"created",
				"created_particles"
			],
			[
				"crea",
				"created_particles"
			],
			[
				"mask",
				"maskParticles"
			],
			[
				"p",
				"partilces"
			],
			[
				"getT",
				"getTotalCost"
			],
			[
				"cost",
				"costVector"
			],
			[
				"conci",
				"conciderForMask"
			],
			[
				"gne",
				"generateMask"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 429,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<!doctype html>\n<html lang=\"en-us\">\n\n    <head>\n\n        <meta charset=\"utf-8\" />\n        <title>Ribbon JS by wemakesites.net | ribbonjs.com</title>\n\n        <!--  The main stylesheet of the control is in AcidJs.Ribbon/styles/Ribbon.css -->\n        <link rel=\"stylesheet\" href=\"./css/AcidJs.Ribbon.CustomStylesTool.css\" />\n        <link rel=\"stylesheet\" href=\"./css/AcidJs.Ribbon.MyCustomDropdown.css\" />\n        <!-- \\The main stylesheet of the control is in AcidJs.Ribbon/styles/Ribbon.css -->\n\n        <!-- Style Sheet for this page -->\n        <style> strong { color: #b00; } </style>\n\n    </head>\n\n    <body>\n\n        <div id=\"ribbon-ui\"><!-- / --></div>\n\n        <script type=\"html/x-acidjs-ribbon-template\" id=\"styles_custom_tool_template\">\n            <div class=\"my-custom-styles-tool\" data-tool-name=\"my-custom-styles\">\n                <ul class=\"acidjs-ui-ribbon-tool-exclusive-buttons\">\n                    <# for(var i = 0; i < styles.length; i ++) { #>\n                        <# var style = styles[i];  #>\n                        <# var selected = \"acidjs-ui-tool-active\";  #>\n                        <li>\n                            <a class=\"<#= i === 0 ? selected : \"\" #>\" title=\"AcidJs.Ribbon supports custom tools via templating. This one is custom.\" class=\"<#= styles.cssClass #>\" href=\"#\" data-value=\"<#= style.value #>\" name=\"<#= commandName #>\">\n                                <strong>AaBbCc</strong>\n                                <span><#= style.name #></span>\n                            </a>\n                        </li>\n                    <# } #>\n                </ul>\n            </div>\n        </script>\n\n        <script type=\"html/x-acidjs-ribbon-template\" id=\"my_custom_dropdown_template\">\n            <h5><#= title #></h56>\n            <p><#= text #></p>\n            <ul class=\"my-custom-dropdown-tool\">\n                <# for(var i = 0; i < guitars.length; i ++) { #>\n                    <li>\n                        <a href=\"#\" data-value=\"<#= guitars[i] #>\" name=\"guitar\"><#= guitars[i] #></a>\n                    </li>\n                <# } #>\n            </ul>\n        </script>\n\n        <!-- register control's runtime libraries -->\n        <script src=\"AcidJs.Ribbon/lib/jquery-2.1.3.min.js\"></script>\n        <script src=\"AcidJs.Ribbon/classes/Ribbon.js\"></script>\n        <!-- / register control's runtime libraries -->\n\n        <!-- loads the event handlers in addition to ribbon -->\n        <script src=\"./js/ribbon-eventhandler.js\"></script>\n        <!-- \\loads the event handlers in addition to ribbon -->\n\n    </body>\n</html>\n",
			"file": "ribbon-ui.html",
			"file_size": 2641,
			"file_write_time": 1438042720000000,
			"settings":
			{
				"buffer_size": 2577,
				"line_ending": "Windows"
			}
		},
		{
			"file": "css/framework-style.css",
			"settings":
			{
				"buffer_size": 667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "framework.html",
			"settings":
			{
				"buffer_size": 3221,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "audiolis - all",
	"command_palette":
	{
		"height": 222.0,
		"selected_items":
		[
			[
				":W",
				":w - Save"
			],
			[
				":w",
				":w - Save"
			],
			[
				":s",
				":w - Save"
			],
			[
				":save",
				"File: Save All"
			],
			[
				":",
				":w - Save"
			],
			[
				":packa",
				"Package Control: Install Package"
			],
			[
				":install",
				"Package Control: Install Package"
			],
			[
				":pack",
				"Package Control: Install Package"
			],
			[
				":D",
				"Snippet: Do While Loop"
			],
			[
				":close",
				"Project: Close"
			],
			[
				":e",
				":$ - EOF"
			],
			[
				":pac",
				"Package Control: Install Package"
			],
			[
				":package",
				"Package Control: Install Package"
			],
			[
				":r",
				":e - Revert"
			],
			[
				"Snippet: CD",
				"Snippet: CDATA"
			],
			[
				":install ",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Functor"
			],
			[
				":instal",
				"Package Control: Install Package"
			],
			[
				":package ",
				"Preferences: Browse Packages"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/espinm2/Code/web-ui-framework/framework-style.css",
		"/home/espinm2/Code/web-ui-framework/js/ribbon-scripts.js",
		"/home/espinm2/Code/web-ui-framework/js/Ribbion.js",
		"/home/espinm2/Code/audiolis/src/ParticleSystem.h",
		"/home/espinm2/Code/audiolis/src/sphere.cpp",
		"/home/espinm2/Code/audiolis/src/CMakeLists.txt",
		"/home/espinm2/Code/audiolis/src/sphere.h",
		"/home/espinm2/Code/audiolis/src/ParticleSystem.cpp",
		"/home/espinm2/Code/audiolis/src/particle.h",
		"/home/espinm2/Code/audiolis/src/render_utils.cpp",
		"/home/espinm2/Code/audiolis/src/ParticleSystem_render.cpp",
		"/home/espinm2/Code/audiolis/src/geometry_utils.cpp",
		"/home/espinm2/Code/audiolis/src/main.cpp",
		"/home/espinm2/Code/audiolis/src/geometry_utils.h",
		"/home/espinm2/Code/ray_trace_2014/src/sphere.cpp",
		"/home/espinm2/Code/ray_trace_2014/src/sphere.h",
		"/home/espinm2/Code/audiolis/src/Stats.h",
		"/home/espinm2/Code/audiolis/src/mesh.h",
		"/home/espinm2/Code/audiolis/src/glCanvas.h",
		"/home/espinm2/Code/audiolis/src/BVHNode.h",
		"/home/espinm2/Code/car_detection/prototype_detector.py",
		"/home/espinm2/Dropbox/computer_vision/homework_04/problem3.py",
		"/home/espinm2/Code/audiolis/build/output.txt",
		"/home/espinm2/Code/audiolis/src/mask.h",
		"/home/espinm2/Code/audiolis/src/mask.cpp",
		"/home/espinm2/Code/audiolis/src/render_utils.h",
		"/home/espinm2/Code/audiolis/src/mask_hex.h",
		"/home/espinm2/Code/audiolis/src/argparser.h",
		"/home/espinm2/.config/sublime-text-2/Packages/C++/docs.sublime-snippet",
		"/home/espinm2/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/espinm2/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/usr/share/applications/defaults.list",
		"/usr/share/applications/sublime.desktop"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"section",
			"nav",
			"AcidJs.Ribbon",
			"Acidjs.ribbon",
			"GAP_TOLERANCE",
			"setupParticles",
			"debug()",
			"debug",
			"crop_image",
			"for i in range(10):",
			"createTrainSaveClassifers",
			"extract_feature2",
			"RELAXATION_MERGE_TRIGGER",
			"mergeSimilarParticles",
			"annealing",
			"I hope you`re having a good day too!\nJerrica P.: at 14:05:37\nI am having a good day, thanks! What was your question?\nYou: at 14:06:46\nI had a question about my next phone upgrade-- I noticed that all of the phones on the account say that they are eligible for upgrades in 2016... however, one of the one lines hasn`t upgraded since 2013 I believe.\nYou: at 14:07:02\nI thought that they would be eligible for an upgrade this year.\nJerrica P.: at 14:08:23\nDo you know if that line upgrade had been used by another line?]\nYou: at 14:08:36\nI don`t believe so.\nJerrica P.: at 14:09:04\nMay i have yourn mobile number?\nJerrica P.: at 14:09:06\n*your\nYou: at 14:09:21\ndistancences",
			"generateResSplits",
			"munkresMatching",
			"print",
			"path_read",
			"  createTrainSaveClassifers(2)\n  createTrainSaveClassifers(3)\n  createTrainSaveClassifers(4)\n",
			"main",
			"tile_histagram",
			"simulatedannealing",
			"localAnnealing",
			"generateResSplits",
			"angleBetweenVectors",
			"angle",
			"update()",
			"// DEBUG",
			"MERGE_DISTANCE",
			"addNewParticles",
			"mergeSimilarParticles",
			"ressPlit",
			"mergeSimilarParticles",
			"merge",
			"maskfitting",
			"removeDeadParticles",
			"mergeSimilarParticles",
			"interParticleForce",
			"moveParticle",
			"SPLIT_AMOUNT",
			"mergeSimilarParticles",
			"generateResSplits",
			"mergeSimilarParticles",
			"addNewParticles",
			"removeDeadParticles",
			"mergeSimilarParticles",
			"local annealing",
			"glpoint",
			"update",
			"local",
			"update",
			"prepareMask",
			"simulated",
			"prepareMask",
			"localAnnealing",
			"annealing",
			"prepareMask",
			"interparticle",
			"ressplits",
			"interParticleForce",
			"localAnnealing",
			"addEdgeGeometry",
			"generateResSplits",
			"mergeSimilarParticles",
			"maskfitting",
			"merge_trigger",
			"merge_tr",
			"mergesimilar",
			"gutted_mask_created",
			"mergeSimilarParticles",
			"merge",
			"localAnnealing",
			"prepareMask",
			"getMaskParticle",
			"generateResSplits",
			"resplit",
			"localAnnealing",
			"generateResSplits",
			"update",
			"generateResSplits",
			"update",
			"mergeSimilarParticles",
			"generateResSplits",
			"spike",
			"resSpit",
			"generateResSplits",
			"generate",
			"generateResSplits",
			"maskFitting",
			"Mask(",
			"maskfitting",
			"generateMask",
			"munkresMatching",
			"createParticle",
			"generateMask",
			"delusionalParticleLocations",
			"munkresMatching",
			"generateMask",
			"RADIUS_PARTICLE_WAVE",
			"annealing",
			"interParticleForce",
			"simulatedannealing",
			"RADIUS_PARTICLE_WAVE",
			"REST_LE",
			"interparticleforce",
			"particleSplit",
			"annealing",
			"update",
			"interparticleforce",
			"interparticle",
			"particles",
			"delusionalParticleLocations",
			"maskPositions",
			"delusional particles",
			"direction_dist",
			"munkresMatching",
			"gather",
			"simulatedannealing",
			"cost",
			"mask",
			"collisionDetection",
			"annealing",
			"MERGE_DISTANCE",
			"interParticleForce",
			"cout <<",
			"removeDeadParticles"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"container",
			"feedback",
			"for i in range(1000):",
			"# print",
			"path",
			"maskFitting",
			"sublime.desktop"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"settings":
					{
						"buffer_size": 429,
						"regions":
						{
						},
						"selection":
						[
							[
								296,
								296
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ribbon-ui.html",
					"settings":
					{
						"buffer_size": 2577,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "css/framework-style.css",
					"settings":
					{
						"buffer_size": 667,
						"regions":
						{
						},
						"selection":
						[
							[
								116,
								116
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "framework.html",
					"settings":
					{
						"buffer_size": 3221,
						"regions":
						{
						},
						"selection":
						[
							[
								536,
								536
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.472041754667,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 365.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"parti",
				"ParticleSystem.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"geo",
				"geometry_utils.h"
			],
			[
				"geom",
				"geometry_utils.cpp"
			],
			[
				"cma",
				"CMakeLists.txt"
			],
			[
				"sphere",
				"sphere.h"
			],
			[
				"particle",
				"ParticleSystem_render.cpp"
			],
			[
				"render",
				"render_utils.cpp"
			],
			[
				"particles",
				"ParticleSystem.h"
			],
			[
				"par",
				"particle.h"
			],
			[
				"",
				"ParticleSystem.cpp"
			],
			[
				"sph",
				"sphere.cpp"
			],
			[
				"bvh",
				"BVHNode.h"
			],
			[
				"glcan",
				"glCanvas.h"
			],
			[
				"mesh",
				"mesh.h"
			],
			[
				"stats",
				"Stats.h"
			],
			[
				"arg",
				"argparser.h"
			],
			[
				"glca",
				"glCanvas.cpp"
			],
			[
				"args",
				"argparser.h"
			],
			[
				"kd",
				"KDTree.cpp"
			],
			[
				"kdt",
				"KDTree.cpp"
			],
			[
				"mtr",
				"MersenneTwister.h"
			],
			[
				"fea",
				"/home/espinm2/Dropbox/computer_vision/homework_06/feature_extractor.py"
			],
			[
				"mask",
				"mask.h"
			],
			[
				"geome",
				"geometry_utils.cpp"
			],
			[
				"kdtr",
				"KDTree.cpp"
			],
			[
				"glc",
				"glCanvas.cpp"
			],
			[
				"particlesystem.cpp",
				"ParticleSystem.cpp"
			],
			[
				"mask.cpp",
				"mask.cpp"
			],
			[
				"part",
				"ParticleSystem.cpp"
			],
			[
				"render_",
				"render_utils.h"
			],
			[
				"pa",
				"ParticleSystem.cpp"
			],
			[
				"partic",
				"ParticleSystem.cpp"
			],
			[
				"particl",
				"ParticleSystem.h"
			],
			[
				"ge",
				"geometry_utils.h"
			],
			[
				"pati",
				"ParticleSystem.cpp"
			],
			[
				"mask.h",
				"mask.h"
			],
			[
				"parit",
				"ParticleSystem.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 180.0,
	"status_bar_visible": true
}
